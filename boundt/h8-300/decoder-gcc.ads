-- Decoder.GCC (decl)
--
-- Modelling code generated by the GCC compiler for the H8/300,
-- including:
--
-- > parsing symbol tables in COFF
--
-- > calling protocols
--
-- > switch/case support functions
--
--
-- A component of the Bound-T Worst-Case Execution Time Tool.
--
-------------------------------------------------------------------------------
-- Copyright (c) 1999 .. 2015 Tidorum Ltd
-- All rights reserved.
--
-- Redistribution and use in source and binary forms, with or without
-- modification, are permitted provided that the following conditions are met:
--
-- 1. Redistributions of source code must retain the above copyright notice, this
--    list of conditions and the following disclaimer.
-- 2. Redistributions in binary form must reproduce the above copyright notice,
--    this list of conditions and the following disclaimer in the documentation
--    and/or other materials provided with the distribution.
--
-- This software is provided by the copyright holders and contributors "as is" and
-- any express or implied warranties, including, but not limited to, the implied
-- warranties of merchantability and fitness for a particular purpose are
-- disclaimed. In no event shall the copyright owner or contributors be liable for
-- any direct, indirect, incidental, special, exemplary, or consequential damages
-- (including, but not limited to, procurement of substitute goods or services;
-- loss of use, data, or profits; or business interruption) however caused and
-- on any theory of liability, whether in contract, strict liability, or tort
-- (including negligence or otherwise) arising in any way out of the use of this
-- software, even if advised of the possibility of such damage.
--
-- Other modules (files) of this software composition should contain their
-- own copyright statements, which may have different copyright and usage
-- conditions. The above conditions apply to this file.
-------------------------------------------------------------------------------
--
-- $Revision: 1.5 $
-- $Date: 2015/10/26 22:19:13 $
--
-- $Log: decoder-gcc.ads,v $
-- Revision 1.5  2015/10/26 22:19:13  niklas
-- Version 4b, and moved to free open-source licence.
--
-- Revision 1.4  2007/01/21 22:07:59  niklas
-- Updated for BT-CH-0041.
--
-- Revision 1.3  2005/10/20 17:05:33  niklas
-- Added function Unresolved_Call_Effect to support dynamic calls
-- as implemented in BT-CH-0014.
--
-- Revision 1.2  2005/07/26 12:12:58  niklas
-- Added function COFF_Data_Cell.
--
-- Revision 1.1  2005/03/22 20:45:37  niklas
-- First version.
--


with Arithmetic;
with Calling.Stacked;
with Formats.COFF.Parsing;
with Processor;
with Storage;


package Decoder.GCC is


   --
   --    COFF symbol parsing
   --


   function COFF_Data_Cell (
      Object : Formats.COFF.Parsing.Symbol_Denotation_T)
   return Processor.Cell_Spec_T;
   --
   -- The (processor-specific) cell specified by a COFF Symbol_Entry or
   -- Symbol_Entry_2 symbol record that represents a data cell.
   --
   -- Precondition: Object_Kind (Object) = Data.
   --
   -- Raises Formats.COFF.Parsing.No_Such_Cell if the Object does not
   -- correspond to a (tracked) cell for the present target processor.


   --
   --    Calling protocols
   --


   type Protocol_T is new Calling.Stacked.Protocol_T
   with null record;
   --
   -- The GCC calling protocol.
   -- TBD variants with/without frame-pointer.
   -- TBD variants before/after GCC 3.5.
   --
   -- This protocol uses the SP (R7) stack for return addresses,
   -- parameters (when not passed in registers) and local variables.


   type Protocol_Ref is access all Protocol_T'Class;
   --
   -- A reference to a GCC-class protocol.


   function Map_Kind (
      Callee : Storage.Cell_T;
      Under  : Protocol_T)
   return Calling.Map_Kind_T;
   --
   -- Overrides (implements) Calling.Map_Kind.


   function Caller_Cell (
      Callee : Storage.Cell_T;
      Under  : Protocol_T)
   return Storage.Cell_T;
   --
   -- Overrides (implements) Calling.Caller_Cell.


   -- overriding
   function Sure_Invariant (
      Caller : Storage.Cell_T;
      Under  : Protocol_T;
      Stub   : Calling.Stub_Level_T)
   return Boolean;


   function Protocol (Program : Programs.Program_T)
   return Calling.Protocol_Ref;
   --
   -- Creates a new instance of the GCC protocol.


   function Unresolved_Call_Effect (Program : Programs.Program_T)
   return Arithmetic.Effect_Ref;
   --
   -- The arithmetic effect to be assumed for an unresolved dynamic
   -- call (that is, a call where the callee is unknown).


end Decoder.GCC;
