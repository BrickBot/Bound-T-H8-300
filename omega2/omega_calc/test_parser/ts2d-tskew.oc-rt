# Omega Calculator v2.1 (based on Omega Library 2.1, July, 2008):
# # This is the file facts.prew, which is prepended to the .prew files
# # for the particular code generation we want, defines things like the
# # iteration space and dependences.  Known facts are inserted by the
# # Makefile.
# #
# # If you're looking at a .w file instead of facts.prew, then you should
# # remember to edit the original .prew files, not the .w files.
# #
# # This facts.prew file describes the program
# #
# #   for(i = 0; i <= N-1; i++)
# #     for(j = 0; j <= M-1; j++)
# #       cur[i][j]=i*j+(i-j)+2.00001;
# # 
# #   for(t = 0; t < T; t++) {
# #     for(i = 0; i <= N-1; i++)
# #       for(j = 0; j <= M-1; j++)
# # 	  old[i][j] = cur[i][j];
# # 
# #     for(i = 1; i <= N-2; i++)
# #       for(j = 1; j <= M-1; j++)
# # 	  cur[i][j] = (old[i-1][j]+old[i][j-1]+4*old[i][j]+old[i][j+1]+old[i+1][j])*0.125;
# # 
# #   }
# 
# 
# 
# # first, the spaces and memory maps (for expanded version)
# 
# symbolic T, N, M;
# 
# 
# IS_INIT := { [1,i,1,j,1,0,0]            :            0<=i<=N-1 and 0<=j<=M-1 };
# 
# MM_INIT := { [1,i,1,j,1,0,0] -> [0,i,j] :            0<=i<=N-1 and 0<=j<=M-1 };
# 
# 
# IS_COPY := { [2,t,0,i,1,j,1]            : 0<=t<T and 0<=i<=N-1 and 0<=j<=M-1 };
# 
# MM_COPY := { [2,t,0,i,1,j,1] -> [t+1,i,j] : 0<=t<T and 0<=i<=N-1 and 0<=j<=M-1 };
# 
# 
# IS_CALC := { [2,t,1,i,1,j,1]            : 0<=t<T and 0< i< N-1 and 0< j< M-1 };
# 
# MM_CALC := { [2,t,1,i,1,j,1] -> [t+1,i,j] : 0<=t<T and 0< i< N-1 and 0< j< M-1 };
# 
# 
# 
# # memory-based Output and Flow/anti-dependences (among Assign (copy), and Calc)
# 
# FWD5 := {[x,t,y,i,z] -> [x',t',y',i',z'] :
# 	(x'>x) or
# 	(x'=x and t'>t) or
# 	(x'=x and t'=t and y'>y) or
# 	(x'=x and t'=t and y'=y and i'>i) or
# 	(x'=x and t'=t and y'=y and i'=i and z'>z) };
# 
# FWD7 := {[x,t,y,i,z,a,b] -> [x',t',y',i',z',a',b'] :
# 	(x'>x) or
# 	(x'=x and t'>t) or
# 	(x'=x and t'=t and y'>y) or
# 	(x'=x and t'=t and y'=y and i'>i) or
# 	(x'=x and t'=t and y'=y and i'=i and z'>z) or
# 	(x'=x and t'=t and y'=y and i'=i and z'=z and a'>a) or
# 	(x'=x and t'=t and y'=y and i'=i and z'=z and a'=a and b'>b) };
# 
# FWD11:= {[a,b,c,d,e,f,g,h,i,j,k] -> [a',b',c',d',e',f',g',h',i',j',k'] :
# 	(a'>a) or
# 	(a'=a and b'>b) or
# 	(a'=a and b'=b and c'>c) or
# 	(a'=a and b'=b and c'=c and d'>d) or
# 	(a'=a and b'=b and c'=c and d'=d and e'>e) or
# 	(a'=a and b'=b and c'=c and d'=d and e'=e and f'>f) or
# 	(a'=a and b'=b and c'=c and d'=d and e'=e and f'=f and g'>g) or
# 	(a'=a and b'=b and c'=c and d'=d and e'=e and f'=f and g'=g and h'>h) or
# 	(a'=a and b'=b and c'=c and d'=d and e'=e and f'=f and g'=g and h'=h and i'>i) or
# 	(a'=a and b'=b and c'=c and d'=d and e'=e and f'=f and g'=g and h'=h and i'=i and j'>j) or
# 	(a'=a and b'=b and c'=c and d'=d and e'=e and f'=f and g'=g and h'=h and i'=i and j'=j and k'>k) };
# 
# 
# 
# BWD5 := inverse FWD5;
# 
# BWD7 := inverse FWD7;
# 
# BWD11:= inverse FWD11;
# 
# EQij := {[x,t,y,i,z,j,w] -> [x',t',y',i',z',j',w'] : i'=i and j'=j };
# 
# 
# 
# # data flow for original code:
# 
# DF_12p1 := ( IS_INIT * IS_COPY ) intersection
# 	{[1,i,1,j,1,0,0] -> [2,0,0,i,1,j,1] : 0<i<N-1 and 0<j<M-1 };
# 
# DF_12p2 := ( IS_INIT * IS_COPY ) intersection
# 	{[1,i,1,j,1,0,0] -> [2,t,0,i,1,j,1] : i=0 };
# 
# DF_12p3 := ( IS_INIT * IS_COPY ) intersection
# 	{[1,i,1,j,1,0,0] -> [2,t,0,i,1,j,1] : i=N-1 and N>1 };
# 
# DF_12p4 := ( IS_INIT * IS_COPY ) intersection
# 	{[1,i,1,j,1,0,0] -> [2,t,0,i,1,j,1] : j=0 and 0<i<N-1 };
# 
# DF_12p5 := ( IS_INIT * IS_COPY ) intersection
# 	{[1,i,1,j,1,0,0] -> [2,t,0,i,1,j,1] : j=M-1 and M>1 and 0<i<N-1 };
# 
# 
# DF_32   := ( IS_CALC  * IS_COPY ) intersection
# 	{[2,t,1,i,1,j,1] -> [2,t+1,0,i,1,j,1]};
# 
# 
# DF_23a  := ( IS_COPY * IS_CALC ) intersection
# 	{[2,t,0,i,1,j,1] -> [2,t,1,i+1,1,j,1] };
# 
# DF_23b  := ( IS_COPY * IS_CALC ) intersection
# 	{[2,t,0,i,1,j,1] -> [2,t,1,i,1,j+1,1] };
# 
# DF_23c  := ( IS_COPY * IS_CALC ) intersection
# 	{[2,t,0,i,1,j,1] -> [2,t,1,i,1,j,1] };
# 
# DF_23d  := ( IS_COPY * IS_CALC ) intersection
# 	{[2,t,0,i,1,j,1] -> [2,t,1,i,1,j-1,1] };
# 
# DF_23e  := ( IS_COPY * IS_CALC ) intersection
# 	{[2,t,0,i,1,j,1] -> [2,t,1,i-1,1,j,1] };
# 
# 
# 
# # arity expansion relations
# ex_0_5v := {             [] -> [a,b,c,d,e]     };
# 
# ex_0_7v := {             [] -> [a,b,c,d,e,f,g] };
# 
# ex_0_9v := {             [] -> [a,b,c,d,e,f,g,h,i] };
# 
# ex_0_11v:= {             [] -> [a,b,c,d,e,f,g,h,i,j,k] };
# 
# ex_3_5 := {         [a,b,c] -> [a,b,c,0,0]     };
# 
# ex_3_7 := {         [a,b,c] -> [a,b,c,0,0,0,0] };
# 
# ex_5_7 := {     [a,b,c,d,e] -> [a,b,c,d,e,0,0] };
# 
# 
# ex_5_3 := {     [a,b,c,0,0] -> [a,b,c]         };
# 
# ex_7_3 := { [a,b,c,0,0,0,0] -> [a,b,c]         };
# 
# ex_7_5 := { [a,b,c,d,e,0,0] -> [a,b,c,d,e]     };
# 
# 
# ex_9_7 := { [a,b,c,d,e,f,g,0,0] -> [a,b,c,d,e,f,g]     };
# 
# ex_11_7:= { [a,b,c,d,e,f,g,0,0,0,0] -> [a,b,c,d,e,f,g]     };
# 
# 
# all_11:= { [a,b,c,d,e,f,g,h,i,j,k] };
# 
# 
# 
# 
# # data flow for array expanded code,
# # after forward substitution of "old[i] = cur[i]"
# # the ones that are not there are unsatisifiable
# 
# DF13ap1 := DF_12p1 join DF_23a;
# 
# DF13ap2 := DF_12p2 join DF_23a;
# 
# assertUnsatisfiable(DF_12p3 join DF_23a);

{[In_1,i,In_3,j,In_5,In_6,In_7] -> [Out_1,t,Out_3,i',Out_5,j',Out_7]  : FALSE }

# 
# assertUnsatisfiable(DF_12p4 join DF_23a);

{[In_1,i,In_3,j,In_5,In_6,In_7] -> [Out_1,t,Out_3,i',Out_5,j',Out_7]  : FALSE }

# 
# assertUnsatisfiable(DF_12p5 join DF_23a);

{[In_1,i,In_3,j,In_5,In_6,In_7] -> [Out_1,t,Out_3,i',Out_5,j',Out_7]  : FALSE }

# 
# 
# DF13bp1 := DF_12p1 join DF_23b;
# 
# assertUnsatisfiable(DF_12p2 join DF_23b);

{[In_1,i,In_3,j,In_5,In_6,In_7] -> [Out_1,t,Out_3,i',Out_5,j',Out_7]  : FALSE }

# 
# assertUnsatisfiable(DF_12p3 join DF_23b);

{[In_1,i,In_3,j,In_5,In_6,In_7] -> [Out_1,t,Out_3,i',Out_5,j',Out_7]  : FALSE }

# 
# DF13bp4 := DF_12p4 join DF_23b;
# 
# assertUnsatisfiable(DF_12p5 join DF_23b);

{[In_1,i,In_3,j,In_5,In_6,In_7] -> [Out_1,t,Out_3,i',Out_5,j',Out_7]  : FALSE }

# 
#         
# DF13cp1 := DF_12p1 join DF_23c;
# 
# assertUnsatisfiable(DF_12p2 join DF_23c);

{[In_1,i,In_3,j,In_5,In_6,In_7] -> [Out_1,t,Out_3,i',Out_5,j',Out_7]  : FALSE }

# 
# assertUnsatisfiable(DF_12p3 join DF_23c);

{[In_1,i,In_3,j,In_5,In_6,In_7] -> [Out_1,t,Out_3,i',Out_5,j',Out_7]  : FALSE }

# 
# assertUnsatisfiable(DF_12p4 join DF_23c);

{[In_1,i,In_3,j,In_5,In_6,In_7] -> [Out_1,t,Out_3,i',Out_5,j',Out_7]  : FALSE }

# 
# assertUnsatisfiable(DF_12p5 join DF_23c);

{[In_1,i,In_3,j,In_5,In_6,In_7] -> [Out_1,t,Out_3,i',Out_5,j',Out_7]  : FALSE }

# 
# 
# DF13dp1 := DF_12p1 join DF_23d;
# 
# assertUnsatisfiable(DF_12p2 join DF_23d);

{[In_1,i,In_3,j,In_5,In_6,In_7] -> [Out_1,t,Out_3,i',Out_5,j',Out_7]  : FALSE }

# 
# assertUnsatisfiable(DF_12p3 join DF_23d);

{[In_1,i,In_3,j,In_5,In_6,In_7] -> [Out_1,t,Out_3,i',Out_5,j',Out_7]  : FALSE }

# 
# assertUnsatisfiable(DF_12p4 join DF_23d);

{[In_1,i,In_3,j,In_5,In_6,In_7] -> [Out_1,t,Out_3,i',Out_5,j',Out_7]  : FALSE }

# 
# DF13dp5 := DF_12p5 join DF_23d;
# 
# 
# DF13ep1 := DF_12p1 join DF_23e;
# 
# assertUnsatisfiable(DF_12p2 join DF_23e);

{[In_1,i,In_3,j,In_5,In_6,In_7] -> [Out_1,t,Out_3,i',Out_5,j',Out_7]  : FALSE }

# 
# DF13ep3 := DF_12p3 join DF_23e;
# 
# assertUnsatisfiable(DF_12p4 join DF_23e);

{[In_1,i,In_3,j,In_5,In_6,In_7] -> [Out_1,t,Out_3,i',Out_5,j',Out_7]  : FALSE }

# 
# assertUnsatisfiable(DF_12p5 join DF_23e);

{[In_1,i,In_3,j,In_5,In_6,In_7] -> [Out_1,t,Out_3,i',Out_5,j',Out_7]  : FALSE }

# 
# 
# DF33a   := DF_32 join DF_23a;
# 
# DF33b   := DF_32 join DF_23b;
# 
# DF33c   := DF_32 join DF_23c;
# 
# DF33d   := DF_32 join DF_23d;
# 
# DF33e   := DF_32 join DF_23e;
# 
# 
#  
# KNOWN := { [] : N, M >= 4 and T >= 0 };
# 
#  
# # tskew.prew
# #
# # Finally, here are the memory maps for the arrays we write to,
# # straight out of the current draft of the paper.
# #
# # For the initialization, just do as we did in "orig", but from 7-dim. space:
# 
# NO_T := { [t,i,j] -> [i,j] };
# 
# 
# 
# IS_Trans := { [2,t,1,i,1,j,1] -> [2,tb,1,xb,1,s,1,xx,1,tt,1] :
# 	0<=tt<16 and 0<=xx<16 and s=j+i+t and
# 	t=16*tb+tt and i+t = 16*xb+xx };
# 
# 
# IS_Tinv := inverse IS_Trans;
# 
# 
# FULL_IS_Trans := IS_Trans union {[1,i,1,j,1,0,0] -> [1,i,1,j,1,0,0,0,0,0,0]};
# 
# 
# 
# TS_IS_CALC := IS_CALC join IS_Trans;
# 
# 
# TS_MM_main  := IS_Tinv join { [2,t,1,i,1,j,1] -> [i,j] }
#                 restrictDomain { [2,tb,1,xb,1,s,1,xx,1,tt,1] : tt=16-1 }
#                 restrictDomain TS_IS_CALC;
# 
# 
# TS_MM_tide  := { [2,tb,1,xb,1,s,1,xx,1,tt,1]->[xbmod2,s-(16*tb+tt),
# 					       xx+1-(16-1),tt]:
#                  exists (xbdiv2 : 2*xbdiv2+xbmod2 = xb && 0<=xbmod2<2) and
#                          xx+1>=16-1 and tt<16-1 }
#                 restrictDomain TS_IS_CALC;
# 
# 
# TS_MM_cache :=  { [2,tb,1,xb,1,s,1,xx,1,tt,1] -> [smod_wid, xx, tt] :
#                   exists (sdiv_wid : 3*sdiv_wid+smod_wid = s &&
# 		          0<=smod_wid<3) and
#                   xx+1<16-1 and tt<16-1 }
#                 restrictDomain TS_IS_CALC;
# 
# 
# main_dims  := {[i, j] : 0<=i<=N and 0<=j<=M};
# 
# 
# tide_dims  := {[xbmod2, s, xxend, tt] : 0<=xbmod2<2 and 0<=s<M+N and
# ## tide_dims  := {[xbmod2, s, xxend, tt] : 0<=xbmod2<2 and 0<=s<M and
# 					0<=xxend<2 and 0<=tt<16};
# 
# 
# cache_dims := {[smod4, xx, tt] : 0<=smod4<3 and 0<=xx<16 and
# 				 0<=tt<16};
# 
# 
# tcodegen
# 	set-mmap 2	"cur"   [main_dims],  TS_MM_main,
# 			"tide"  [tide_dims],  TS_MM_tide,
# 			"cache" [cache_dims], TS_MM_cache
# 
# 	set-mmap 1	"cur"	[main_dims],  (ex_11_7 join MM_INIT) join NO_T
# 
# 	trans-is FULL_IS_Trans
# 
# 	["w=init(t2,t4)",	 	 IS_INIT, "all", MM_INIT],
# 	["w=0.125*(r1+r2+(4*r3)+r4+r5)", IS_CALC, "all", MM_CALC,
# 		[1, DF13ap1, 1, DF13ap2, 2, DF33a],
# 		[1, DF13bp1, 1, DF13bp4, 2, DF33b],
# 		[1, DF13cp1, 2, DF33c],
# 		[1, DF13dp1, 1, DF13dp5, 2, DF33d],
# 		[1, DF13ep1, 1, DF13ep3, 2, DF33e]
# 	]
# given KNOWN;
#define s1(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11)	w=init(t2,t4)
#define s2(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11)	cur[(t2)][(t4)] = w
#define s3(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11)	r1 = cur[16*(t4)+(t8)-1][(t6)-16*(t4)-(t8)]
#define s4(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11)	r1 = cur[0][(t6)-(t8)-16*(t4)]
#define s5(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11)	r1 = cur[(t8)-16*(t2)+16*(t4)-1][(t6)-(t8)-16*(t4)]
#define s6(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11)	r1 = tide[(intMod)(-1*(t4)+1,2)][(t6)-(t10)-16*(t2)-1][(t8)][(t10)-1]
#define s7(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11)	r1 = cache[(intMod)(1*(t6)+1,3)][(t8)-2][(t10)-1]
#define s8(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11)	r2 = cur[16*(t4)+(t8)][(t6)-16*(t4)-(t8)-1]
#define s9(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11)	r2 = cur[(t6)-(t10)-16*(t2)-1][0]
#define s10(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11)	r2 = cur[(t8)-16*(t2)+16*(t4)][(t6)-(t8)-16*(t4)-1]
#define s11(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11)	r2 = tide[(In) (tcodegen), (no) (substitution) (was) (possible) (for) (the) (expression) (that) (was) (needed) (here) (so) (this) (won)'(t) (compile) - (for) (details), (run) (with) -(Dg1) (and) (look) (for) "(failed) (to) (find) (substitution)" (in) (oc).(out).][(t6)-16*(t2)-(t10)-1][(In) (tcodegen), (no) (substitution) (was) (possible) (for) (the) (expression) (that) (was) (needed) (here) (so) (this) (won)'(t) (compile) - (for) (details), (run) (with) -(Dg1) (and) (look) (for) "(failed) (to) (find) (substitution)" (in) (oc).(out).][(t10)-1]
#define s12(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11)	r2 = cache[(intMod)(1*(t6)+1,3)][(t8)-1][(t10)-1]
#define s13(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11)	r3 = cur[16*(t4)+(t8)][(t6)-16*(t4)-(t8)]
#define s14(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11)	r3 = cur[(t8)-16*(t2)+16*(t4)][(t6)-(t8)-16*(t4)]
#define s15(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11)	r3 = tide[(In) (tcodegen), (no) (substitution) (was) (possible) (for) (the) (expression) (that) (was) (needed) (here) (so) (this) (won)'(t) (compile) - (for) (details), (run) (with) -(Dg1) (and) (look) (for) "(failed) (to) (find) (substitution)" (in) (oc).(out).][(t6)-16*(t2)-(t10)][(In) (tcodegen), (no) (substitution) (was) (possible) (for) (the) (expression) (that) (was) (needed) (here) (so) (this) (won)'(t) (compile) - (for) (details), (run) (with) -(Dg1) (and) (look) (for) "(failed) (to) (find) (substitution)" (in) (oc).(out).][(t10)-1]
#define s16(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11)	r3 = cache[(intMod)(1*(t6)+-1,3)][(t8)-1][(t10)-1]
#define s17(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11)	r4 = cur[16*(t4)+(t8)][(t6)-16*(t4)-(t8)+1]
#define s18(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11)	r4 = cur[(t6)-(M)-(t10)-16*(t2)+2][(M)-1]
#define s19(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11)	r4 = cur[(t8)-16*(t2)+16*(t4)][(t6)-(t8)-16*(t4)+1]
#define s20(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11)	r4 = tide[(In) (tcodegen), (no) (substitution) (was) (possible) (for) (the) (expression) (that) (was) (needed) (here) (so) (this) (won)'(t) (compile) - (for) (details), (run) (with) -(Dg1) (and) (look) (for) "(failed) (to) (find) (substitution)" (in) (oc).(out).][(t6)-16*(t2)-(t10)+1][(In) (tcodegen), (no) (substitution) (was) (possible) (for) (the) (expression) (that) (was) (needed) (here) (so) (this) (won)'(t) (compile) - (for) (details), (run) (with) -(Dg1) (and) (look) (for) "(failed) (to) (find) (substitution)" (in) (oc).(out).][(t10)-1]
#define s21(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11)	r4 = cache[(intMod)(1*(t6)+0,3)][(t8)-1][(t10)-1]
#define s22(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11)	r5 = cur[16*(t4)+(t8)+1][(t6)-16*(t4)-(t8)]
#define s23(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11)	r5 = cur[(N)-1][(t6)-(t8)-16*(t4)]
#define s24(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11)	r5 = cur[(t8)-16*(t2)+16*(t4)+1][(t6)-(t8)-16*(t4)]
#define s25(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11)	r5 = tide[(intMod)(-1*(t4)+0,2)][(t6)-(t10)-16*(t2)+1][(t8)-14][(t10)-1]
#define s26(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11)	r5 = cache[(intMod)(1*(t6)+0,3)][(t8)][(t10)-1]
#define s27(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11)	w=0.125*(r1+r2+(4*r3)+r4+r5)
#define s28(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11)	cur[(t8)-16*(t2)+16*(t4)-15][(t6)-(t8)-16*(t4)] = w
#define s29(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11)	tide[(intMod)(-1*(t4)+0,2)][(t6)-(t10)-16*(t2)][(t8)-14][(t10)] = w
#define s30(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11)	cache[(intMod)(1*(t6)+0,3)][(t8)][(t10)] = w
for(t2 = 0; t2 <= N-1; t2++) {
  for(t4 = 0; t4 <= M-1; t4++) {
    s1(1,t2,1,t4,1,0,0,0,0,0,0);
    s2(1,t2,1,t4,1,0,0,0,0,0,0);
  }
}
for(t2 = 0; t2 <= intDiv(T-1,16); t2++) {
  for(t4 = t2; t4 <= min(intDiv(T+N-3,16),intDiv(16*t2+N+13,16)); t4++) {
    for(t6 = max(16*t2+2,16*t4+1); t6 <= min(16*t2+N+M+11,T+N+M-5,16*t4+M+13); t6++) {
      for(t8 = max(-16*t4+t6-M+2,-16*t4+16*t2+1,0); t8 <= min(-16*t4+16*t2+N+13,T-16*t4+N-3,-16*t4+t6-1,15); t8++) {
        if (t2 <= 0 && 16*t4 >= -t8+2 && 16*t4 <= -t8+N-2) {
          s3(2,0,1,t4,1,t6,1,t8,1,0,1);
        }
        if (t8 == 1 && t4 <= t2) {
          s4(2,t2,1,t2,1,t6,1,1,1,0,1);
        }
        if (t2 >= 1 && 16*t4 >= -t8+16*t2+2 && 16*t4 <= -t8+N+16*t2-2) {
          s5(2,t2,1,t4,1,t6,1,t8,1,0,1);
        }
        if (16*t4 <= -t8+N-2 && 16*t4 <= -t8+t6-2 && t2 <= 0) {
          s8(2,0,1,t4,1,t6,1,t8,1,0,1);
        }
        if (16*t4 >= -t8+t6-1 && 16*t4 <= -t8+N+16*t2-2) {
          s9(2,t2,1,t4,1,t6,1,t6+-16*t4-1,1,0,1);
        }
        if (t2 >= 1 && 16*t4 <= -t8+N+16*t2-2 && 16*t4 <= -t8+t6-2) {
          s10(2,t2,1,t4,1,t6,1,t8,1,0,1);
        }
        if (16*t4 <= -t8+N-2 && t2 <= 0) {
          s13(2,0,1,t4,1,t6,1,t8,1,0,1);
        }
        if (t2 >= 1 && 16*t4 <= -t8+N+16*t2-2) {
          s14(2,t2,1,t4,1,t6,1,t8,1,0,1);
        }
        if (16*t4 <= -t8+N-2 && t2 <= 0 && 16*t4 >= -t8+t6-M+3) {
          s17(2,0,1,t4,1,t6,1,t8,1,0,1);
        }
        if (16*t4 <= -t8+N+16*t2-2 && 16*t4 <= -t8+t6-M+2) {
          s18(2,t2,1,t4,1,t6,1,t6-M+-16*t4+2,1,0,1);
        }
        if (t2 >= 1 && 16*t4 >= -t8+t6-M+3 && 16*t4 <= -t8+N+16*t2-2) {
          s19(2,t2,1,t4,1,t6,1,t8,1,0,1);
        }
        if (16*t4 <= -t8+N-3 && t2 <= 0) {
          s22(2,0,1,t4,1,t6,1,t8,1,0,1);
        }
        if (16*t4 == -t8+16*t2+N-2) {
          s23(2,t2,1,t4,1,t6,1,N+-16*t4+16*t2-2,1,0,1);
        }
        if (t2 >= 1 && 16*t4 <= -t8+N+16*t2-3) {
          s24(2,t2,1,t4,1,t6,1,t8,1,0,1);
        }
        if (16*t4 <= -t8+N+16*t2-2) {
          s27(2,t2,1,t4,1,t6,1,t8,1,0,1);
        }
        if (t8 >= 14 && 16*t4 <= -t8+N+16*t2-2) {
          s29(2,t2,1,t4,1,t6,1,t8,1,0,1);
        }
        if (16*t4 <= -t8+N+16*t2-2 && t8 <= 13) {
          s30(2,t2,1,t4,1,t6,1,t8,1,0,1);
        }
        if (16*t4 <= t6-2 && 16*t4 >= t6-M+3 && t8 <= 0 && 16*t4 >= 16*t2+N-1) {
          s6(2,t2,1,t4,1,t6,1,0,1,16*t4-N+-16*t2+2,1);
        }
        if (16*t4 <= t6-2 && 16*t4 >= t6-M+3 && 16*t4 >= 16*t2+N-1 && t8 <= 0) {
          s11(2,t2,1,t4,1,t6,1,0,1,16*t4-N+-16*t2+2,1);
        }
        if (16*t4 <= t6-2 && 16*t4 >= t6-M+3 && 16*t4 >= 16*t2+N-1 && t8 <= 0) {
          s15(2,t2,1,t4,1,t6,1,0,1,16*t4-N+-16*t2+2,1);
        }
        if (16*t4 <= t6-2 && 16*t4 >= t6-M+3 && 16*t4 >= 16*t2+N-1 && t8 <= 0) {
          s20(2,t2,1,t4,1,t6,1,0,1,16*t4-N+-16*t2+2,1);
        }
        if (16*t4 <= t6-2 && 16*t4 >= t6-M+3 && t8 <= 0 && 16*t4 >= 16*t2+N-1) {
          s23(2,t2,1,t4,1,t6,1,0,1,16*t4-N+-16*t2+2,1);
        }
        if (16*t4 <= t6-2 && 16*t4 >= t6-M+3 && t8 <= 0 && 16*t4 >= 16*t2+N-1) {
          s27(2,t2,1,t4,1,t6,1,0,1,16*t4-N+-16*t2+2,1);
        }
        if (16*t4 <= t6-2 && 16*t4 >= -M+t6+3 && t8 <= 0 && 16*t4 >= 16*t2+N+13) {
          s28(2,t2,1,t4,1,t6,1,0,1,15,1);
        }
        if (16*t4 >= t6-M+3 && 16*t4 <= 16*t2+N+12 && t8 <= 0 && 16*t4 >= 16*t2+N-1 && 16*t4 <= t6-2) {
          s30(2,t2,1,t4,1,t6,1,0,1,16*t4-N+-16*t2+2,1);
        }
        if (16*t4 >= t6-M+3 && t8 <= 0 && 16*t4 <= t6-2) {
          for(t10 = max(16*t4-16*t2-N+3,1); t10 <= min(T-16*t2-1,14); t10++) {
            s6(2,t2,1,t4,1,t6,1,0,1,t10,1);
            s11(2,t2,1,t4,1,t6,1,0,1,t10,1);
            s15(2,t2,1,t4,1,t6,1,0,1,t10,1);
            s20(2,t2,1,t4,1,t6,1,0,1,t10,1);
            s26(2,t2,1,t4,1,t6,1,0,1,t10,1);
            s27(2,t2,1,t4,1,t6,1,0,1,t10,1);
            s30(2,t2,1,t4,1,t6,1,0,1,t10,1);
          }
        }
        if (16*t4 <= 16*t2+N+12 && t4 >= t2+2 && t8 <= 0 && T >= 16*t2+16 && 16*t4 <= t6-2 && 16*t4 >= t6-M+3) {
          s6(2,t2,1,t4,1,t6,1,0,1,15,1);
        }
        if (16*t4 <= 16*t2+N+12 && t4 >= t2+2 && t8 <= 0 && T >= 16*t2+16 && 16*t4 <= t6-2 && 16*t4 >= t6-M+3) {
          s11(2,t2,1,t4,1,t6,1,0,1,15,1);
        }
        if (16*t4 <= 16*t2+N+12 && t4 >= t2+2 && t8 <= 0 && T >= 16*t2+16 && 16*t4 <= t6-2 && 16*t4 >= t6-M+3) {
          s15(2,t2,1,t4,1,t6,1,0,1,15,1);
        }
        if (16*t4 <= 16*t2+N+12 && t4 >= t2+2 && t8 <= 0 && T >= 16*t2+16 && 16*t4 <= t6-2 && 16*t4 >= t6-M+3) {
          s20(2,t2,1,t4,1,t6,1,0,1,15,1);
        }
        if (16*t4 <= 16*t2+N+12 && t4 >= t2+2 && t8 <= 0 && T >= 16*t2+16 && 16*t4 <= t6-2 && 16*t4 >= t6-M+3) {
          s26(2,t2,1,t4,1,t6,1,0,1,15,1);
        }
        if (16*t4 <= 16*t2+N+12 && t4 >= t2+2 && t8 <= 0 && T >= 16*t2+16 && 16*t4 <= t6-2 && 16*t4 >= t6-M+3) {
          s27(2,t2,1,t4,1,t6,1,0,1,15,1);
        }
        if (16*t4 <= 16*t2+N+12 && t4 >= t2+2 && t8 <= 0 && T >= 16*t2+16 && 16*t4 <= t6-2 && 16*t4 >= t6-M+3) {
          s28(2,t2,1,t4,1,t6,1,0,1,15,1);
        }
        if (t8 <= 0 && 16*t4 <= t6-M+2 && 16*t4 >= 16*t2+N-1) {
          s6(2,t2,1,t4,1,M+16*t4-2,1,0,1,16*t4-N+-16*t2+2,1);
        }
        if (t8 <= 0 && 16*t4 <= t6-M+2 && 16*t4 >= 16*t2+N-1) {
          s11(2,t2,1,t4,1,M+16*t4-2,1,0,1,16*t4-N+-16*t2+2,1);
        }
        if (t8 <= 0 && 16*t4 <= t6-M+2 && 16*t4 >= 16*t2+N-1) {
          s15(2,t2,1,t4,1,M+16*t4-2,1,0,1,16*t4-N+-16*t2+2,1);
        }
        if (16*t4 <= t6-M+2 && 16*t4 >= 16*t2+N-1 && t8 <= 0) {
          s18(2,t2,1,t4,1,M+16*t4-2,1,0,1,16*t4-N+-16*t2+2,1);
        }
        if (16*t4 <= t6-M+2 && 16*t4 >= 16*t2+N-1 && t8 <= 0) {
          s23(2,t2,1,t4,1,M+16*t4-2,1,0,1,16*t4-N+-16*t2+2,1);
        }
        if (16*t4 >= 16*t2+N-1 && t8 <= 0 && 16*t4 <= t6-M+2) {
          s27(2,t2,1,t4,1,M+16*t4-2,1,0,1,16*t4-N+-16*t2+2,1);
        }
        if (t8 <= 0 && 16*t4 >= 16*t2+N+13 && 16*t4 <= -M+t6+2) {
          s28(2,t2,1,t4,1,M+16*t4-2,1,0,1,15,1);
        }
        if (16*t4 <= 16*t2+N+12 && t8 <= 0 && 16*t4 <= t6-M+2 && 16*t4 >= 16*t2+N-1) {
          s30(2,t2,1,t4,1,M+16*t4-2,1,0,1,16*t4-N+-16*t2+2,1);
        }
        if (16*t4 <= t6-M+2 && t8 <= 0) {
          for(t10 = max(16*t4-16*t2-N+3,1); t10 <= min(T-16*t2-1,14); t10++) {
            s6(2,t2,1,t4,1,M+16*t4-2,1,0,1,t10,1);
            s11(2,t2,1,t4,1,M+16*t4-2,1,0,1,t10,1);
            s15(2,t2,1,t4,1,M+16*t4-2,1,0,1,t10,1);
            s18(2,t2,1,t4,1,M+16*t4-2,1,0,1,t10,1);
            s26(2,t2,1,t4,1,M+16*t4-2,1,0,1,t10,1);
            s27(2,t2,1,t4,1,M+16*t4-2,1,0,1,t10,1);
            s30(2,t2,1,t4,1,M+16*t4-2,1,0,1,t10,1);
          }
        }
        if (t8 <= 0 && t4 >= t2+2 && 16*t4 <= 16*t2+N+12 && T >= 16*t2+16 && 16*t4 <= t6-M+2) {
          s6(2,t2,1,t4,1,M+16*t4-2,1,0,1,15,1);
        }
        if (t8 <= 0 && t4 >= t2+2 && 16*t4 <= 16*t2+N+12 && T >= 16*t2+16 && 16*t4 <= t6-M+2) {
          s11(2,t2,1,t4,1,M+16*t4-2,1,0,1,15,1);
        }
        if (t8 <= 0 && t4 >= t2+2 && 16*t4 <= 16*t2+N+12 && T >= 16*t2+16 && 16*t4 <= t6-M+2) {
          s15(2,t2,1,t4,1,M+16*t4-2,1,0,1,15,1);
        }
        if (t8 <= 0 && t4 >= t2+2 && 16*t4 <= 16*t2+N+12 && T >= 16*t2+16 && 16*t4 <= t6-M+2) {
          s18(2,t2,1,t4,1,M+16*t4-2,1,0,1,15,1);
        }
        if (t8 <= 0 && t4 >= t2+2 && 16*t4 <= 16*t2+N+12 && T >= 16*t2+16 && 16*t4 <= t6-M+2) {
          s26(2,t2,1,t4,1,M+16*t4-2,1,0,1,15,1);
        }
        if (t8 <= 0 && t4 >= t2+2 && 16*t4 <= 16*t2+N+12 && T >= 16*t2+16 && 16*t4 <= t6-M+2) {
          s27(2,t2,1,t4,1,M+16*t4-2,1,0,1,15,1);
        }
        if (t8 <= 0 && t4 >= t2+2 && 16*t4 <= 16*t2+N+12 && T >= 16*t2+16 && 16*t4 <= t6-M+2) {
          s28(2,t2,1,t4,1,M+16*t4-2,1,0,1,15,1);
        }
        if (t8 == 1 && 16*t4 >= t6-M+2 && 16*t4 <= t6-3 && 16*t4 >= 16*t2+N-2) {
          s6(2,t2,1,t4,1,t6,1,1,1,16*t4-N+-16*t2+3,1);
        }
        if (t8 == 1 && 16*t4 >= t6-M+2 && 16*t4 <= t6-3 && 16*t4 >= 16*t2+N-2) {
          s12(2,t2,1,t4,1,t6,1,1,1,16*t4-N+-16*t2+3,1);
        }
        if (t8 == 1 && 16*t4 >= t6-M+2 && 16*t4 <= t6-3 && 16*t4 >= 16*t2+N-2) {
          s16(2,t2,1,t4,1,t6,1,1,1,16*t4-N+-16*t2+3,1);
        }
        if (t8 == 1 && 16*t4 >= t6-M+2 && 16*t4 <= t6-3 && 16*t4 >= 16*t2+N-2) {
          s21(2,t2,1,t4,1,t6,1,1,1,16*t4-N+-16*t2+3,1);
        }
        if (t8 == 1 && 16*t4 >= t6-M+2 && 16*t4 <= t6-3 && 16*t4 >= 16*t2+N-2) {
          s23(2,t2,1,t4,1,t6,1,1,1,16*t4-N+-16*t2+3,1);
        }
        if (t8 == 1 && 16*t4 >= t6-M+2 && 16*t4 <= t6-3 && 16*t4 >= 16*t2+N-2) {
          s27(2,t2,1,t4,1,t6,1,1,1,16*t4-N+-16*t2+3,1);
        }
        if (t8 == 1 && 16*t4 >= -M+t6+2 && 16*t4 <= t6-3 && 16*t4 >= 16*t2+N+12) {
          s28(2,t2,1,t4,1,t6,1,1,1,15,1);
        }
        if (t8 == 1 && 16*t4 <= t6-3 && 16*t4 >= t6-M+2 && 16*t4 >= 16*t2+N-2 && 16*t4 <= 16*t2+N+11) {
          s30(2,t2,1,t4,1,t6,1,1,1,16*t4-N+-16*t2+3,1);
        }
        if (t8 == 1 && 16*t4 >= t6-M+2 && t4 >= t2+1 && 16*t4 <= t6-3) {
          for(t10 = max(16*t4-16*t2-N+4,1); t10 <= min(T-16*t2-1,14); t10++) {
            s6(2,t2,1,t4,1,t6,1,1,1,t10,1);
            s12(2,t2,1,t4,1,t6,1,1,1,t10,1);
            s16(2,t2,1,t4,1,t6,1,1,1,t10,1);
            s21(2,t2,1,t4,1,t6,1,1,1,t10,1);
            s26(2,t2,1,t4,1,t6,1,1,1,t10,1);
            s27(2,t2,1,t4,1,t6,1,1,1,t10,1);
            s30(2,t2,1,t4,1,t6,1,1,1,t10,1);
          }
        }
        if (t8 == 1 && 16*t4 >= t6-M+2 && t4 >= t2+1 && 16*t4 <= 16*t2+N+11 && T >= 16*t2+16 && 16*t4 <= t6-3) {
          s6(2,t2,1,t4,1,t6,1,1,1,15,1);
        }
        if (t8 == 1 && 16*t4 >= t6-M+2 && t4 >= t2+1 && 16*t4 <= 16*t2+N+11 && T >= 16*t2+16 && 16*t4 <= t6-3) {
          s12(2,t2,1,t4,1,t6,1,1,1,15,1);
        }
        if (t8 == 1 && 16*t4 >= t6-M+2 && t4 >= t2+1 && 16*t4 <= 16*t2+N+11 && T >= 16*t2+16 && 16*t4 <= t6-3) {
          s16(2,t2,1,t4,1,t6,1,1,1,15,1);
        }
        if (t8 == 1 && 16*t4 >= t6-M+2 && t4 >= t2+1 && 16*t4 <= 16*t2+N+11 && T >= 16*t2+16 && 16*t4 <= t6-3) {
          s21(2,t2,1,t4,1,t6,1,1,1,15,1);
        }
        if (t8 == 1 && 16*t4 >= t6-M+2 && t4 >= t2+1 && 16*t4 <= 16*t2+N+11 && T >= 16*t2+16 && 16*t4 <= t6-3) {
          s26(2,t2,1,t4,1,t6,1,1,1,15,1);
        }
        if (t8 == 1 && 16*t4 >= t6-M+2 && t4 >= t2+1 && 16*t4 <= 16*t2+N+11 && T >= 16*t2+16 && 16*t4 <= t6-3) {
          s27(2,t2,1,t4,1,t6,1,1,1,15,1);
        }
        if (t8 == 1 && 16*t4 >= t6-M+2 && t4 >= t2+1 && 16*t4 <= 16*t2+N+11 && T >= 16*t2+16 && 16*t4 <= t6-3) {
          s28(2,t2,1,t4,1,t6,1,1,1,15,1);
        }
        if (t8 == 1 && 16*t4 <= t6-M+1 && 16*t4 >= 16*t2+N-2) {
          s6(2,t2,1,t4,1,M+16*t4-1,1,1,1,16*t4-N+-16*t2+3,1);
        }
        if (t8 == 1 && 16*t4 <= t6-M+1 && 16*t4 >= 16*t2+N-2) {
          s12(2,t2,1,t4,1,M+16*t4-1,1,1,1,16*t4-N+-16*t2+3,1);
        }
        if (t8 == 1 && 16*t4 <= t6-M+1 && 16*t4 >= 16*t2+N-2) {
          s16(2,t2,1,t4,1,M+16*t4-1,1,1,1,16*t4-N+-16*t2+3,1);
        }
        if (t8 == 1 && 16*t4 >= 16*t2+N-2 && 16*t4 <= t6-M+1) {
          s18(2,t2,1,t4,1,M+16*t4-1,1,1,1,16*t4-N+-16*t2+3,1);
        }
        if (t8 == 1 && 16*t4 <= t6-M+1 && 16*t4 >= 16*t2+N-2) {
          s23(2,t2,1,t4,1,M+16*t4-1,1,1,1,16*t4-N+-16*t2+3,1);
        }
        if (t8 == 1 && 16*t4 >= 16*t2+N-2 && 16*t4 <= t6-M+1) {
          s27(2,t2,1,t4,1,M+16*t4-1,1,1,1,16*t4-N+-16*t2+3,1);
        }
        if (t8 == 1 && 16*t4 >= 16*t2+N+12 && 16*t4 <= -M+t6+1) {
          s28(2,t2,1,t4,1,M+16*t4-1,1,1,1,15,1);
        }
        if (t8 == 1 && 16*t4 >= 16*t2+N-2 && 16*t4 <= 16*t2+N+11 && 16*t4 <= t6-M+1) {
          s30(2,t2,1,t4,1,M+16*t4-1,1,1,1,16*t4-N+-16*t2+3,1);
        }
        if (t8 == 1 && t4 >= t2+1 && 16*t4 <= t6-M+1) {
          for(t10 = max(16*t4-16*t2-N+4,1); t10 <= min(T-16*t2-1,14); t10++) {
            s6(2,t2,1,t4,1,M+16*t4-1,1,1,1,t10,1);
            s12(2,t2,1,t4,1,M+16*t4-1,1,1,1,t10,1);
            s16(2,t2,1,t4,1,M+16*t4-1,1,1,1,t10,1);
            s18(2,t2,1,t4,1,M+16*t4-1,1,1,1,t10,1);
            s26(2,t2,1,t4,1,M+16*t4-1,1,1,1,t10,1);
            s27(2,t2,1,t4,1,M+16*t4-1,1,1,1,t10,1);
            s30(2,t2,1,t4,1,M+16*t4-1,1,1,1,t10,1);
          }
        }
        if (t8 == 1 && 16*t4 <= 16*t2+N+11 && t4 >= t2+1 && 16*t4 <= t6-M+1 && T >= 16*t2+16) {
          s6(2,t2,1,t4,1,M+16*t4-1,1,1,1,15,1);
        }
        if (t8 == 1 && 16*t4 <= 16*t2+N+11 && t4 >= t2+1 && 16*t4 <= t6-M+1 && T >= 16*t2+16) {
          s12(2,t2,1,t4,1,M+16*t4-1,1,1,1,15,1);
        }
        if (t8 == 1 && 16*t4 <= 16*t2+N+11 && t4 >= t2+1 && 16*t4 <= t6-M+1 && T >= 16*t2+16) {
          s16(2,t2,1,t4,1,M+16*t4-1,1,1,1,15,1);
        }
        if (t8 == 1 && 16*t4 <= 16*t2+N+11 && t4 >= t2+1 && 16*t4 <= t6-M+1 && T >= 16*t2+16) {
          s18(2,t2,1,t4,1,M+16*t4-1,1,1,1,15,1);
        }
        if (t8 == 1 && 16*t4 <= 16*t2+N+11 && t4 >= t2+1 && 16*t4 <= t6-M+1 && T >= 16*t2+16) {
          s26(2,t2,1,t4,1,M+16*t4-1,1,1,1,15,1);
        }
        if (t8 == 1 && 16*t4 <= 16*t2+N+11 && t4 >= t2+1 && 16*t4 <= t6-M+1 && T >= 16*t2+16) {
          s27(2,t2,1,t4,1,M+16*t4-1,1,1,1,15,1);
        }
        if (t8 == 1 && 16*t4 <= 16*t2+N+11 && t4 >= t2+1 && 16*t4 <= t6-M+1 && T >= 16*t2+16) {
          s28(2,t2,1,t4,1,M+16*t4-1,1,1,1,15,1);
        }
        if (t8 <= 0 && 16*t4 >= t6-1 && 16*t4 >= 16*t2+N-1) {
          s6(2,t2,1,t4,1,16*t4+1,1,0,1,16*t4-N+-16*t2+2,1);
        }
        if (t8 <= 0 && 16*t4 >= t6-1 && 16*t4 >= 16*t2+N-1) {
          s9(2,t2,1,t4,1,16*t4+1,1,0,1,16*t4-N+-16*t2+2,1);
        }
        if (t8 <= 0 && 16*t4 >= t6-1 && 16*t4 >= 16*t2+N-1) {
          s15(2,t2,1,t4,1,16*t4+1,1,0,1,16*t4-N+-16*t2+2,1);
        }
        if (t8 <= 0 && 16*t4 >= t6-1 && 16*t4 >= 16*t2+N-1) {
          s20(2,t2,1,t4,1,16*t4+1,1,0,1,16*t4-N+-16*t2+2,1);
        }
        if (t8 <= 0 && 16*t4 >= t6-1 && 16*t4 >= 16*t2+N-1) {
          s23(2,t2,1,t4,1,16*t4+1,1,0,1,16*t4-N+-16*t2+2,1);
        }
        if (t8 <= 0 && 16*t4 >= 16*t2+N-1 && 16*t4 >= t6-1) {
          s27(2,t2,1,t4,1,16*t4+1,1,0,1,16*t4-N+-16*t2+2,1);
        }
        if (t8 <= 0 && 16*t4 >= 16*t2+N+13 && 16*t4 >= t6-1) {
          s28(2,t2,1,t4,1,16*t4+1,1,0,1,15,1);
        }
        if (t8 <= 0 && 16*t4 >= t6-1 && 16*t4 <= 16*t2+N+12 && 16*t4 >= 16*t2+N-1) {
          s30(2,t2,1,t4,1,16*t4+1,1,0,1,16*t4-N+-16*t2+2,1);
        }
        if (16*t4 >= t6-1 && t8 <= 0) {
          for(t10 = max(16*t4-16*t2-N+3,1); t10 <= min(T-16*t2-1,14); t10++) {
            s6(2,t2,1,t4,1,16*t4+1,1,0,1,t10,1);
            s9(2,t2,1,t4,1,16*t4+1,1,0,1,t10,1);
            s15(2,t2,1,t4,1,16*t4+1,1,0,1,t10,1);
            s20(2,t2,1,t4,1,16*t4+1,1,0,1,t10,1);
            s26(2,t2,1,t4,1,16*t4+1,1,0,1,t10,1);
            s27(2,t2,1,t4,1,16*t4+1,1,0,1,t10,1);
            s30(2,t2,1,t4,1,16*t4+1,1,0,1,t10,1);
          }
        }
        if (t8 <= 0 && t4 >= t2+2 && 16*t4 <= 16*t2+N+12 && T >= 16*t2+16 && 16*t4 >= t6-1) {
          s6(2,t2,1,t4,1,16*t4+1,1,0,1,15,1);
        }
        if (t8 <= 0 && t4 >= t2+2 && 16*t4 <= 16*t2+N+12 && T >= 16*t2+16 && 16*t4 >= t6-1) {
          s9(2,t2,1,t4,1,16*t4+1,1,0,1,15,1);
        }
        if (t8 <= 0 && t4 >= t2+2 && 16*t4 <= 16*t2+N+12 && T >= 16*t2+16 && 16*t4 >= t6-1) {
          s15(2,t2,1,t4,1,16*t4+1,1,0,1,15,1);
        }
        if (t8 <= 0 && t4 >= t2+2 && 16*t4 <= 16*t2+N+12 && T >= 16*t2+16 && 16*t4 >= t6-1) {
          s20(2,t2,1,t4,1,16*t4+1,1,0,1,15,1);
        }
        if (t8 <= 0 && t4 >= t2+2 && 16*t4 <= 16*t2+N+12 && T >= 16*t2+16 && 16*t4 >= t6-1) {
          s26(2,t2,1,t4,1,16*t4+1,1,0,1,15,1);
        }
        if (t8 <= 0 && t4 >= t2+2 && 16*t4 <= 16*t2+N+12 && T >= 16*t2+16 && 16*t4 >= t6-1) {
          s27(2,t2,1,t4,1,16*t4+1,1,0,1,15,1);
        }
        if (t8 <= 0 && t4 >= t2+2 && 16*t4 <= 16*t2+N+12 && T >= 16*t2+16 && 16*t4 >= t6-1) {
          s28(2,t2,1,t4,1,16*t4+1,1,0,1,15,1);
        }
        if (t8 == 1 && 16*t4 >= t6-2 && 16*t4 >= 16*t2+N-2) {
          s6(2,t2,1,t4,1,16*t4+2,1,1,1,16*t4-N+-16*t2+3,1);
        }
        if (t8 == 1 && 16*t4 >= t6-2 && 16*t4 >= 16*t2+N-2) {
          s9(2,t2,1,t4,1,16*t4+2,1,1,1,16*t4-N+-16*t2+3,1);
        }
        if (t8 == 1 && 16*t4 >= t6-2 && 16*t4 >= 16*t2+N-2) {
          s16(2,t2,1,t4,1,16*t4+2,1,1,1,16*t4-N+-16*t2+3,1);
        }
        if (t8 == 1 && 16*t4 >= t6-2 && 16*t4 >= 16*t2+N-2) {
          s21(2,t2,1,t4,1,16*t4+2,1,1,1,16*t4-N+-16*t2+3,1);
        }
        if (t8 == 1 && 16*t4 >= t6-2 && 16*t4 >= 16*t2+N-2) {
          s23(2,t2,1,t4,1,16*t4+2,1,1,1,16*t4-N+-16*t2+3,1);
        }
        if (t8 == 1 && 16*t4 >= t6-2 && 16*t4 >= 16*t2+N-2) {
          s27(2,t2,1,t4,1,16*t4+2,1,1,1,16*t4-N+-16*t2+3,1);
        }
        if (t8 == 1 && 16*t4 >= t6-2 && 16*t4 >= 16*t2+N+12) {
          s28(2,t2,1,t4,1,16*t4+2,1,1,1,15,1);
        }
        if (t8 == 1 && 16*t4 >= 16*t2+N-2 && 16*t4 >= t6-2 && 16*t4 <= 16*t2+N+11) {
          s30(2,t2,1,t4,1,16*t4+2,1,1,1,16*t4-N+-16*t2+3,1);
        }
        if (t8 == 1 && t4 >= t2+1 && 16*t4 >= t6-2) {
          for(t10 = max(16*t4-16*t2-N+4,1); t10 <= min(T-16*t2-1,14); t10++) {
            s6(2,t2,1,t4,1,16*t4+2,1,1,1,t10,1);
            s9(2,t2,1,t4,1,16*t4+2,1,1,1,t10,1);
            s16(2,t2,1,t4,1,16*t4+2,1,1,1,t10,1);
            s21(2,t2,1,t4,1,16*t4+2,1,1,1,t10,1);
            s26(2,t2,1,t4,1,16*t4+2,1,1,1,t10,1);
            s27(2,t2,1,t4,1,16*t4+2,1,1,1,t10,1);
            s30(2,t2,1,t4,1,16*t4+2,1,1,1,t10,1);
          }
        }
        if (t8 == 1 && 16*t4 <= 16*t2+N+11 && t4 >= t2+1 && 16*t4 >= t6-2 && T >= 16*t2+16) {
          s6(2,t2,1,t4,1,16*t4+2,1,1,1,15,1);
        }
        if (t8 == 1 && 16*t4 <= 16*t2+N+11 && t4 >= t2+1 && 16*t4 >= t6-2 && T >= 16*t2+16) {
          s9(2,t2,1,t4,1,16*t4+2,1,1,1,15,1);
        }
        if (t8 == 1 && 16*t4 <= 16*t2+N+11 && t4 >= t2+1 && 16*t4 >= t6-2 && T >= 16*t2+16) {
          s16(2,t2,1,t4,1,16*t4+2,1,1,1,15,1);
        }
        if (t8 == 1 && 16*t4 <= 16*t2+N+11 && t4 >= t2+1 && 16*t4 >= t6-2 && T >= 16*t2+16) {
          s21(2,t2,1,t4,1,16*t4+2,1,1,1,15,1);
        }
        if (t8 == 1 && 16*t4 <= 16*t2+N+11 && t4 >= t2+1 && 16*t4 >= t6-2 && T >= 16*t2+16) {
          s26(2,t2,1,t4,1,16*t4+2,1,1,1,15,1);
        }
        if (t8 == 1 && 16*t4 <= 16*t2+N+11 && t4 >= t2+1 && 16*t4 >= t6-2 && T >= 16*t2+16) {
          s27(2,t2,1,t4,1,16*t4+2,1,1,1,15,1);
        }
        if (t8 == 1 && 16*t4 <= 16*t2+N+11 && t4 >= t2+1 && 16*t4 >= t6-2 && T >= 16*t2+16) {
          s28(2,t2,1,t4,1,16*t4+2,1,1,1,15,1);
        }
        if (16*t4 <= -t8+t6-M+2 && t8 >= 2 && 16*t4 >= -t8+N+16*t2-1 && t8 <= 14) {
          s7(2,t2,1,t4,1,t6,1,t6-M+-16*t4+2,1,t6-N-M+-16*t2+4,1);
        }
        if (16*t4 <= -t8+t6-M+2 && t8 >= 2 && 16*t4 >= -t8+N+16*t2-1 && t8 <= 14) {
          s12(2,t2,1,t4,1,t6,1,t6-M+-16*t4+2,1,t6-N-M+-16*t2+4,1);
        }
        if (16*t4 <= -t8+t6-M+2 && t8 >= 2 && 16*t4 >= -t8+N+16*t2-1 && t8 <= 14) {
          s16(2,t2,1,t4,1,t6,1,t6-M+-16*t4+2,1,t6-N-M+-16*t2+4,1);
        }
        if (t8 >= 2 && t8 <= 14 && 16*t4 <= -t8+t6-M+2 && 16*t4 >= -t8+N+16*t2-1) {
          s18(2,t2,1,t4,1,t6,1,t6-M+-16*t4+2,1,t6-N-M+-16*t2+4,1);
        }
        if (16*t4 <= -t8+t6-M+2 && t8 >= 2 && 16*t4 >= -t8+N+16*t2-1 && t8 <= 14) {
          s23(2,t2,1,t4,1,t6,1,t6-M+-16*t4+2,1,t6-N-M+-16*t2+4,1);
        }
        if (16*t4 <= -t8+t6-M+2 && t8 >= 2 && 16*t4 >= -t8+N+16*t2-1 && t8 <= 14) {
          s27(2,t2,1,t4,1,t6,1,t6-M+-16*t4+2,1,t6-N-M+-16*t2+4,1);
        }
        if (t8 <= 14 && t8 >= 2 && 16*t4 >= -t8+16*t2+N+13 && 16*t4 <= -t8+t6-M+2) {
          s28(2,t2,1,t4,1,M+N+16*t2+11,1,N+-16*t4+16*t2+13,1,15,1);
        }
        if (t8 == 14 && 16*t4 <= t6-M-12 && 16*t4 <= 16*t2+N-2 && 16*t4 >= 16*t2+N-15) {
          s29(2,t2,1,t4,1,M+16*t4+12,1,14,1,16*t4-N+-16*t2+16,1);
        }
        if (t8 <= 13 && 16*t4 <= -t8+N+16*t2+12 && 16*t4 >= -t8+N+16*t2-1 && 16*t4 <= -t8+t6-M+2 && t8 >= 2) {
          s30(2,t2,1,t4,1,t6,1,t6-M+-16*t4+2,1,t6-N-M+-16*t2+4,1);
        }
        if (16*t4 <= -t8+t6-M+2 && t8 <= 13 && t8 >= 2) {
          for(t10 = max(16*t4+t8-N-16*t2+3,1); t10 <= min(T-16*t2-1,16*t4+t8-16*t2-2,14); t10++) {
            s7(2,t2,1,t4,1,t6,1,t6-M+-16*t4+2,1,t10,1);
            s12(2,t2,1,t4,1,t6,1,t6-M+-16*t4+2,1,t10,1);
            s16(2,t2,1,t4,1,t6,1,t6-M+-16*t4+2,1,t10,1);
            s18(2,t2,1,t4,1,t6,1,t6-M+-16*t4+2,1,t10,1);
            s26(2,t2,1,t4,1,t6,1,t6-M+-16*t4+2,1,t10,1);
            s27(2,t2,1,t4,1,t6,1,t6-M+-16*t4+2,1,t10,1);
            s30(2,t2,1,t4,1,t6,1,t6-M+-16*t4+2,1,t10,1);
          }
        }
        if (16*t4 <= -t8+N+16*t2+12 && 16*t4 >= -t8+16*t2+17 && 16*t4 <= -t8+t6-M+2 && T >= 16*t2+16 && t8 >= 2 && t8 <= 13) {
          s7(2,t2,1,t4,1,t6,1,t6-M+-16*t4+2,1,15,1);
        }
        if (16*t4 <= -t8+N+16*t2+12 && 16*t4 >= -t8+16*t2+17 && 16*t4 <= -t8+t6-M+2 && T >= 16*t2+16 && t8 >= 2 && t8 <= 13) {
          s12(2,t2,1,t4,1,t6,1,t6-M+-16*t4+2,1,15,1);
        }
        if (16*t4 <= -t8+N+16*t2+12 && 16*t4 >= -t8+16*t2+17 && 16*t4 <= -t8+t6-M+2 && T >= 16*t2+16 && t8 >= 2 && t8 <= 13) {
          s16(2,t2,1,t4,1,t6,1,t6-M+-16*t4+2,1,15,1);
        }
        if (16*t4 <= -t8+N+16*t2+12 && 16*t4 >= -t8+16*t2+17 && 16*t4 <= -t8+t6-M+2 && T >= 16*t2+16 && t8 >= 2 && t8 <= 13) {
          s18(2,t2,1,t4,1,t6,1,t6-M+-16*t4+2,1,15,1);
        }
        if (16*t4 <= -t8+N+16*t2+12 && 16*t4 >= -t8+16*t2+17 && 16*t4 <= -t8+t6-M+2 && T >= 16*t2+16 && t8 >= 2 && t8 <= 13) {
          s26(2,t2,1,t4,1,t6,1,t6-M+-16*t4+2,1,15,1);
        }
        if (16*t4 <= -t8+N+16*t2+12 && 16*t4 >= -t8+16*t2+17 && 16*t4 <= -t8+t6-M+2 && T >= 16*t2+16 && t8 >= 2 && t8 <= 13) {
          s27(2,t2,1,t4,1,t6,1,t6-M+-16*t4+2,1,15,1);
        }
        if (16*t4 <= -t8+N+16*t2+12 && 16*t4 <= -t8+t6-M+2 && t4 >= t2+1 && T >= 16*t2+16 && t8 >= 2 && t8 <= 13) {
          s28(2,t2,1,t4,1,t6,1,t6-M+-16*t4+2,1,15,1);
        }
        if (t8 == 14 && 16*t4 <= t6-M-12) {
          for(t10 = max(16*t4-16*t2-N+17,1); t10 <= min(T-16*t2-1,16*t4-16*t2+12,14); t10++) {
            s7(2,t2,1,t4,1,M+16*t4+12,1,14,1,t10,1);
            s12(2,t2,1,t4,1,M+16*t4+12,1,14,1,t10,1);
            s16(2,t2,1,t4,1,M+16*t4+12,1,14,1,t10,1);
            s18(2,t2,1,t4,1,M+16*t4+12,1,14,1,t10,1);
            s25(2,t2,1,t4,1,M+16*t4+12,1,14,1,t10,1);
            s27(2,t2,1,t4,1,M+16*t4+12,1,14,1,t10,1);
            s29(2,t2,1,t4,1,M+16*t4+12,1,14,1,t10,1);
          }
        }
        if (t8 == 14 && 16*t4 <= 16*t2+N-2 && t4 >= t2+1 && 16*t4 <= t6-M-12 && T >= 16*t2+16) {
          s7(2,t2,1,t4,1,M+16*t4+12,1,14,1,15,1);
        }
        if (t8 == 14 && 16*t4 <= 16*t2+N-2 && t4 >= t2+1 && 16*t4 <= t6-M-12 && T >= 16*t2+16) {
          s12(2,t2,1,t4,1,M+16*t4+12,1,14,1,15,1);
        }
        if (t8 == 14 && 16*t4 <= 16*t2+N-2 && t4 >= t2+1 && 16*t4 <= t6-M-12 && T >= 16*t2+16) {
          s16(2,t2,1,t4,1,M+16*t4+12,1,14,1,15,1);
        }
        if (t8 == 14 && 16*t4 <= 16*t2+N-2 && t4 >= t2+1 && 16*t4 <= t6-M-12 && T >= 16*t2+16) {
          s18(2,t2,1,t4,1,M+16*t4+12,1,14,1,15,1);
        }
        if (t8 == 14 && 16*t4 <= 16*t2+N-2 && t4 >= t2+1 && 16*t4 <= t6-M-12 && T >= 16*t2+16) {
          s25(2,t2,1,t4,1,M+16*t4+12,1,14,1,15,1);
        }
        if (t8 == 14 && 16*t4 <= 16*t2+N-2 && t4 >= t2+1 && 16*t4 <= t6-M-12 && T >= 16*t2+16) {
          s27(2,t2,1,t4,1,M+16*t4+12,1,14,1,15,1);
        }
        if (t8 == 14 && 16*t4 <= 16*t2+N-2 && t4 >= t2+1 && 16*t4 <= t6-M-12 && T >= 16*t2+16) {
          s28(2,t2,1,t4,1,M+16*t4+12,1,14,1,15,1);
        }
        if (16*t4 >= -t8+t6-M+3 && t8 <= 14 && 16*t4 >= -t8+N+16*t2-1 && t8 >= 2 && 16*t4 <= -t8+t6-2) {
          s7(2,t2,1,t4,1,t6,1,t8,1,t8-N+-16*t2+16*t4+2,1);
        }
        if (16*t4 >= -t8+t6-M+3 && t8 <= 14 && 16*t4 >= -t8+N+16*t2-1 && t8 >= 2 && 16*t4 <= -t8+t6-2) {
          s12(2,t2,1,t4,1,t6,1,t8,1,t8-N+-16*t2+16*t4+2,1);
        }
        if (16*t4 >= -t8+t6-M+3 && t8 <= 14 && 16*t4 >= -t8+N+16*t2-1 && t8 >= 2 && 16*t4 <= -t8+t6-2) {
          s16(2,t2,1,t4,1,t6,1,t8,1,t8-N+-16*t2+16*t4+2,1);
        }
        if (16*t4 >= -t8+t6-M+3 && t8 <= 14 && 16*t4 >= -t8+N+16*t2-1 && t8 >= 2 && 16*t4 <= -t8+t6-2) {
          s21(2,t2,1,t4,1,t6,1,t8,1,t8-N+-16*t2+16*t4+2,1);
        }
        if (16*t4 >= -t8+t6-M+3 && t8 <= 14 && 16*t4 >= -t8+N+16*t2-1 && t8 >= 2 && 16*t4 <= -t8+t6-2) {
          s23(2,t2,1,t4,1,t6,1,t8,1,t8-N+-16*t2+16*t4+2,1);
        }
        if (16*t4 >= -t8+t6-M+3 && t8 <= 14 && 16*t4 >= -t8+N+16*t2-1 && t8 >= 2 && 16*t4 <= -t8+t6-2) {
          s27(2,t2,1,t4,1,t6,1,t8,1,t8-N+-16*t2+16*t4+2,1);
        }
        if (16*t4 >= -t8+t6-M+3 && t8 <= 14 && 16*t4 >= -t8+16*t2+N+13 && t8 >= 2 && 16*t4 <= -t8+t6-2) {
          s28(2,t2,1,t4,1,t6,1,N+-16*t4+16*t2+13,1,15,1);
        }
        if (t8 == 14 && 16*t4 <= t6-16 && 16*t4 >= t6-M-11 && 16*t4 <= 16*t2+N-2 && 16*t4 >= 16*t2+N-15) {
          s29(2,t2,1,t4,1,t6,1,14,1,16*t4-N+-16*t2+16,1);
        }
        if (16*t4 <= -t8+N+16*t2+12 && 16*t4 >= -t8+N+16*t2-1 && t8 >= 2 && t8 <= 13 && 16*t4 <= -t8+t6-2 && 16*t4 >= -t8+t6-M+3) {
          s30(2,t2,1,t4,1,t6,1,t8,1,t8-N+-16*t2+16*t4+2,1);
        }
        if (16*t4 <= -t8+t6-2 && t8 <= 13 && t8 >= 2 && 16*t4 >= -t8+t6-M+3) {
          for(t10 = max(16*t4+t8-N-16*t2+3,1); t10 <= min(16*t4+t8-16*t2-2,T-16*t2-1,14); t10++) {
            s7(2,t2,1,t4,1,t6,1,t8,1,t10,1);
            s12(2,t2,1,t4,1,t6,1,t8,1,t10,1);
            s16(2,t2,1,t4,1,t6,1,t8,1,t10,1);
            s21(2,t2,1,t4,1,t6,1,t8,1,t10,1);
            s26(2,t2,1,t4,1,t6,1,t8,1,t10,1);
            s27(2,t2,1,t4,1,t6,1,t8,1,t10,1);
            s30(2,t2,1,t4,1,t6,1,t8,1,t10,1);
          }
        }
        if (t8 <= 13 && 16*t4 >= -t8+16*t2+17 && t8 >= 2 && T >= 16*t2+16 && 16*t4 <= -t8+t6-2 && 16*t4 >= -t8+t6-M+3 && 16*t4 <= -t8+N+16*t2+12) {
          s7(2,t2,1,t4,1,t6,1,t8,1,15,1);
        }
        if (t8 <= 13 && 16*t4 >= -t8+16*t2+17 && t8 >= 2 && T >= 16*t2+16 && 16*t4 <= -t8+t6-2 && 16*t4 >= -t8+t6-M+3 && 16*t4 <= -t8+N+16*t2+12) {
          s12(2,t2,1,t4,1,t6,1,t8,1,15,1);
        }
        if (t8 <= 13 && 16*t4 >= -t8+16*t2+17 && t8 >= 2 && T >= 16*t2+16 && 16*t4 <= -t8+t6-2 && 16*t4 >= -t8+t6-M+3 && 16*t4 <= -t8+N+16*t2+12) {
          s16(2,t2,1,t4,1,t6,1,t8,1,15,1);
        }
        if (t8 <= 13 && 16*t4 >= -t8+16*t2+17 && t8 >= 2 && T >= 16*t2+16 && 16*t4 <= -t8+t6-2 && 16*t4 >= -t8+t6-M+3 && 16*t4 <= -t8+N+16*t2+12) {
          s21(2,t2,1,t4,1,t6,1,t8,1,15,1);
        }
        if (t8 <= 13 && 16*t4 >= -t8+16*t2+17 && t8 >= 2 && T >= 16*t2+16 && 16*t4 <= -t8+t6-2 && 16*t4 >= -t8+t6-M+3 && 16*t4 <= -t8+N+16*t2+12) {
          s26(2,t2,1,t4,1,t6,1,t8,1,15,1);
        }
        if (t8 <= 13 && 16*t4 >= -t8+16*t2+17 && t8 >= 2 && T >= 16*t2+16 && 16*t4 <= -t8+t6-2 && 16*t4 >= -t8+t6-M+3 && 16*t4 <= -t8+N+16*t2+12) {
          s27(2,t2,1,t4,1,t6,1,t8,1,15,1);
        }
        if (t4 >= t2+1 && t8 >= 2 && t8 <= 13 && T >= 16*t2+16 && 16*t4 <= -t8+t6-2 && 16*t4 >= -t8+t6-M+3 && 16*t4 <= -t8+N+16*t2+12) {
          s28(2,t2,1,t4,1,t6,1,t8,1,15,1);
        }
        if (t8 == 14 && 16*t4 <= t6-16 && 16*t4 >= t6-M-11) {
          for(t10 = max(16*t4-16*t2-N+17,1); t10 <= min(T-16*t2-1,16*t4-16*t2+12,14); t10++) {
            s7(2,t2,1,t4,1,t6,1,14,1,t10,1);
            s12(2,t2,1,t4,1,t6,1,14,1,t10,1);
            s16(2,t2,1,t4,1,t6,1,14,1,t10,1);
            s21(2,t2,1,t4,1,t6,1,14,1,t10,1);
            s25(2,t2,1,t4,1,t6,1,14,1,t10,1);
            s27(2,t2,1,t4,1,t6,1,14,1,t10,1);
            s29(2,t2,1,t4,1,t6,1,14,1,t10,1);
          }
        }
        if (t8 == 14 && 16*t4 >= t6-M-11 && t4 >= t2+1 && 16*t4 <= 16*t2+N-2 && T >= 16*t2+16 && 16*t4 <= t6-16) {
          s7(2,t2,1,t4,1,t6,1,14,1,15,1);
        }
        if (t8 == 14 && 16*t4 >= t6-M-11 && t4 >= t2+1 && 16*t4 <= 16*t2+N-2 && T >= 16*t2+16 && 16*t4 <= t6-16) {
          s12(2,t2,1,t4,1,t6,1,14,1,15,1);
        }
        if (t8 == 14 && 16*t4 >= t6-M-11 && t4 >= t2+1 && 16*t4 <= 16*t2+N-2 && T >= 16*t2+16 && 16*t4 <= t6-16) {
          s16(2,t2,1,t4,1,t6,1,14,1,15,1);
        }
        if (t8 == 14 && 16*t4 >= t6-M-11 && t4 >= t2+1 && 16*t4 <= 16*t2+N-2 && T >= 16*t2+16 && 16*t4 <= t6-16) {
          s21(2,t2,1,t4,1,t6,1,14,1,15,1);
        }
        if (t8 == 14 && 16*t4 >= t6-M-11 && t4 >= t2+1 && 16*t4 <= 16*t2+N-2 && T >= 16*t2+16 && 16*t4 <= t6-16) {
          s25(2,t2,1,t4,1,t6,1,14,1,15,1);
        }
        if (t8 == 14 && 16*t4 >= t6-M-11 && t4 >= t2+1 && 16*t4 <= 16*t2+N-2 && T >= 16*t2+16 && 16*t4 <= t6-16) {
          s27(2,t2,1,t4,1,t6,1,14,1,15,1);
        }
        if (t8 == 14 && 16*t4 >= t6-M-11 && t4 >= t2+1 && 16*t4 <= 16*t2+N-2 && T >= 16*t2+16 && 16*t4 <= t6-16) {
          s28(2,t2,1,t4,1,t6,1,14,1,15,1);
        }
        if (16*t4 <= t6-17 && 16*t4 >= t6-M-12 && t8 >= 15 && 16*t4 >= 16*t2+N-16) {
          s7(2,t2,1,t4,1,t6,1,15,1,16*t4-N+-16*t2+17,1);
        }
        if (16*t4 <= t6-17 && 16*t4 >= t6-M-12 && 16*t4 >= 16*t2+N-16 && t8 >= 15) {
          s11(2,t2,1,t4,1,t6,1,15,1,16*t4-N+-16*t2+17,1);
        }
        if (16*t4 <= t6-17 && 16*t4 >= t6-M-12 && 16*t4 >= 16*t2+N-16 && t8 >= 15) {
          s15(2,t2,1,t4,1,t6,1,15,1,16*t4-N+-16*t2+17,1);
        }
        if (16*t4 <= t6-17 && 16*t4 >= t6-M-12 && 16*t4 >= 16*t2+N-16 && t8 >= 15) {
          s20(2,t2,1,t4,1,t6,1,15,1,16*t4-N+-16*t2+17,1);
        }
        if (16*t4 <= t6-17 && 16*t4 >= t6-M-12 && t8 >= 15 && 16*t4 >= 16*t2+N-16) {
          s23(2,t2,1,t4,1,t6,1,15,1,16*t4-N+-16*t2+17,1);
        }
        if (16*t4 <= t6-17 && 16*t4 >= t6-M-12 && t8 >= 15 && 16*t4 >= 16*t2+N-16) {
          s27(2,t2,1,t4,1,t6,1,15,1,16*t4-N+-16*t2+17,1);
        }
        if (16*t4 <= t6-17 && 16*t4 >= -M+t6-12 && t8 >= 15 && 16*t4 >= 16*t2+N-2) {
          s28(2,t2,1,t4,1,t6,1,15,1,15,1);
        }
        if (16*t4 >= t6-M-12 && 16*t4 <= 16*t2+N-3 && t8 >= 15 && 16*t4 >= 16*t2+N-16 && 16*t4 <= t6-17) {
          s29(2,t2,1,t4,1,t6,1,15,1,16*t4-N+-16*t2+17,1);
        }
        if (t8 >= 15 && 16*t4 <= t6-17 && 16*t4 >= t6-M-12) {
          for(t10 = max(16*t4-16*t2-N+18,1); t10 <= min(T-16*t2-1,16*t4-16*t2+13,14); t10++) {
            s7(2,t2,1,t4,1,t6,1,15,1,t10,1);
            s11(2,t2,1,t4,1,t6,1,15,1,t10,1);
            s15(2,t2,1,t4,1,t6,1,15,1,t10,1);
            s20(2,t2,1,t4,1,t6,1,15,1,t10,1);
            s25(2,t2,1,t4,1,t6,1,15,1,t10,1);
            s27(2,t2,1,t4,1,t6,1,15,1,t10,1);
            s29(2,t2,1,t4,1,t6,1,15,1,t10,1);
          }
        }
        if (16*t4 <= 16*t2+N-3 && t4 >= t2+1 && t8 >= 15 && T >= 16*t2+16 && 16*t4 <= t6-17 && 16*t4 >= t6-M-12) {
          s7(2,t2,1,t4,1,t6,1,15,1,15,1);
        }
        if (16*t4 <= 16*t2+N-3 && t4 >= t2+1 && t8 >= 15 && T >= 16*t2+16 && 16*t4 <= t6-17 && 16*t4 >= t6-M-12) {
          s11(2,t2,1,t4,1,t6,1,15,1,15,1);
        }
        if (16*t4 <= 16*t2+N-3 && t4 >= t2+1 && t8 >= 15 && T >= 16*t2+16 && 16*t4 <= t6-17 && 16*t4 >= t6-M-12) {
          s15(2,t2,1,t4,1,t6,1,15,1,15,1);
        }
        if (16*t4 <= 16*t2+N-3 && t4 >= t2+1 && t8 >= 15 && T >= 16*t2+16 && 16*t4 <= t6-17 && 16*t4 >= t6-M-12) {
          s20(2,t2,1,t4,1,t6,1,15,1,15,1);
        }
        if (16*t4 <= 16*t2+N-3 && t4 >= t2+1 && t8 >= 15 && T >= 16*t2+16 && 16*t4 <= t6-17 && 16*t4 >= t6-M-12) {
          s25(2,t2,1,t4,1,t6,1,15,1,15,1);
        }
        if (16*t4 <= 16*t2+N-3 && t4 >= t2+1 && t8 >= 15 && T >= 16*t2+16 && 16*t4 <= t6-17 && 16*t4 >= t6-M-12) {
          s27(2,t2,1,t4,1,t6,1,15,1,15,1);
        }
        if (16*t4 <= 16*t2+N-3 && t4 >= t2+1 && t8 >= 15 && T >= 16*t2+16 && 16*t4 <= t6-17 && 16*t4 >= t6-M-12) {
          s28(2,t2,1,t4,1,t6,1,15,1,15,1);
        }
        if (t8 >= 15 && 16*t4 >= 16*t2+N-16 && 16*t4 <= t6-M-13) {
          s7(2,t2,1,t4,1,M+16*t4+13,1,15,1,16*t4-N+-16*t2+17,1);
        }
        if (16*t4 >= 16*t2+N-16 && t8 >= 15 && 16*t4 <= t6-M-13) {
          s11(2,t2,1,t4,1,M+16*t4+13,1,15,1,16*t4-N+-16*t2+17,1);
        }
        if (16*t4 >= 16*t2+N-16 && t8 >= 15 && 16*t4 <= t6-M-13) {
          s15(2,t2,1,t4,1,M+16*t4+13,1,15,1,16*t4-N+-16*t2+17,1);
        }
        if (16*t4 <= t6-M-13 && 16*t4 >= 16*t2+N-16 && t8 >= 15) {
          s18(2,t2,1,t4,1,M+16*t4+13,1,15,1,16*t4-N+-16*t2+17,1);
        }
        if (16*t4 <= t6-M-13 && 16*t4 >= 16*t2+N-16 && t8 >= 15) {
          s23(2,t2,1,t4,1,M+16*t4+13,1,15,1,16*t4-N+-16*t2+17,1);
        }
        if (16*t4 >= 16*t2+N-16 && t8 >= 15 && 16*t4 <= t6-M-13) {
          s27(2,t2,1,t4,1,M+16*t4+13,1,15,1,16*t4-N+-16*t2+17,1);
        }
        if (t8 >= 15 && 16*t4 >= 16*t2+N-2 && 16*t4 <= -M+t6-13) {
          s28(2,t2,1,t4,1,M+16*t4+13,1,15,1,15,1);
        }
        if (16*t4 <= 16*t2+N-3 && t8 >= 15 && 16*t4 >= 16*t2+N-16 && 16*t4 <= t6-M-13) {
          s29(2,t2,1,t4,1,M+16*t4+13,1,15,1,16*t4-N+-16*t2+17,1);
        }
        if (t8 >= 15 && 16*t4 <= t6-M-13) {
          for(t10 = max(16*t4-16*t2-N+18,1); t10 <= min(16*t4-16*t2+13,T-16*t2-1,14); t10++) {
            s7(2,t2,1,t4,1,M+16*t4+13,1,15,1,t10,1);
            s11(2,t2,1,t4,1,M+16*t4+13,1,15,1,t10,1);
            s15(2,t2,1,t4,1,M+16*t4+13,1,15,1,t10,1);
            s18(2,t2,1,t4,1,M+16*t4+13,1,15,1,t10,1);
            s25(2,t2,1,t4,1,M+16*t4+13,1,15,1,t10,1);
            s27(2,t2,1,t4,1,M+16*t4+13,1,15,1,t10,1);
            s29(2,t2,1,t4,1,M+16*t4+13,1,15,1,t10,1);
          }
        }
        if (t8 >= 15 && t4 >= t2+1 && 16*t4 <= 16*t2+N-3 && T >= 16*t2+16 && 16*t4 <= t6-M-13) {
          s7(2,t2,1,t4,1,M+16*t4+13,1,15,1,15,1);
        }
        if (t8 >= 15 && t4 >= t2+1 && 16*t4 <= 16*t2+N-3 && T >= 16*t2+16 && 16*t4 <= t6-M-13) {
          s11(2,t2,1,t4,1,M+16*t4+13,1,15,1,15,1);
        }
        if (t8 >= 15 && t4 >= t2+1 && 16*t4 <= 16*t2+N-3 && T >= 16*t2+16 && 16*t4 <= t6-M-13) {
          s15(2,t2,1,t4,1,M+16*t4+13,1,15,1,15,1);
        }
        if (t8 >= 15 && t4 >= t2+1 && 16*t4 <= 16*t2+N-3 && T >= 16*t2+16 && 16*t4 <= t6-M-13) {
          s18(2,t2,1,t4,1,M+16*t4+13,1,15,1,15,1);
        }
        if (t8 >= 15 && t4 >= t2+1 && 16*t4 <= 16*t2+N-3 && T >= 16*t2+16 && 16*t4 <= t6-M-13) {
          s25(2,t2,1,t4,1,M+16*t4+13,1,15,1,15,1);
        }
        if (t8 >= 15 && t4 >= t2+1 && 16*t4 <= 16*t2+N-3 && T >= 16*t2+16 && 16*t4 <= t6-M-13) {
          s27(2,t2,1,t4,1,M+16*t4+13,1,15,1,15,1);
        }
        if (t8 >= 15 && t4 >= t2+1 && 16*t4 <= 16*t2+N-3 && T >= 16*t2+16 && 16*t4 <= t6-M-13) {
          s28(2,t2,1,t4,1,M+16*t4+13,1,15,1,15,1);
        }
        if (t8 <= 14 && 16*t4 >= -t8+t6-1 && 16*t4 >= -t8+N+16*t2-1 && t8 >= 2) {
          s7(2,t2,1,t4,1,t6,1,t6+-16*t4-1,1,t6-N+-16*t2+1,1);
        }
        if (16*t4 >= -t8+N+16*t2-1 && t8 <= 14 && t8 >= 2 && 16*t4 >= -t8+t6-1) {
          s9(2,t2,1,t4,1,t6,1,t6+-16*t4-1,1,t6-N+-16*t2+1,1);
        }
        if (t8 <= 14 && 16*t4 >= -t8+t6-1 && 16*t4 >= -t8+N+16*t2-1 && t8 >= 2) {
          s16(2,t2,1,t4,1,t6,1,t6+-16*t4-1,1,t6-N+-16*t2+1,1);
        }
        if (t8 <= 14 && 16*t4 >= -t8+t6-1 && 16*t4 >= -t8+N+16*t2-1 && t8 >= 2) {
          s21(2,t2,1,t4,1,t6,1,t6+-16*t4-1,1,t6-N+-16*t2+1,1);
        }
        if (16*t4 >= -t8+N+16*t2-1 && t8 <= 14 && 16*t4 >= -t8+t6-1 && t8 >= 2) {
          s23(2,t2,1,t4,1,t6,1,t6+-16*t4-1,1,t6-N+-16*t2+1,1);
        }
        if (t8 <= 14 && 16*t4 >= -t8+t6-1 && 16*t4 >= -t8+N+16*t2-1 && t8 >= 2) {
          s27(2,t2,1,t4,1,t6,1,t6+-16*t4-1,1,t6-N+-16*t2+1,1);
        }
        if (t8 <= 14 && 16*t4 >= -t8+16*t2+N+13 && 16*t4 >= -t8+t6-1 && t8 >= 2) {
          s28(2,t2,1,t4,1,N+16*t2+14,1,N+-16*t4+16*t2+13,1,15,1);
        }
        if (t8 == 14 && 16*t4 >= 16*t2+N-15 && 16*t4 >= t6-15 && 16*t4 <= 16*t2+N-2) {
          s29(2,t2,1,t4,1,16*t4+15,1,14,1,16*t4-N+-16*t2+16,1);
        }
        if (16*t4 >= -t8+t6-1 && 16*t4 <= -t8+N+16*t2+12 && 16*t4 >= -t8+N+16*t2-1 && t8 <= 13 && t8 >= 2) {
          s30(2,t2,1,t4,1,t6,1,t6+-16*t4-1,1,t6-N+-16*t2+1,1);
        }
        if (16*t4 >= -t8+t6-1 && t8 <= 13 && t8 >= 2) {
          for(t10 = max(16*t4+t8-N-16*t2+3,1); t10 <= min(T-16*t2-1,16*t4+t8-16*t2-2,14); t10++) {
            s7(2,t2,1,t4,1,t6,1,t6+-16*t4-1,1,t10,1);
            s9(2,t2,1,t4,1,t6,1,t6+-16*t4-1,1,t10,1);
            s16(2,t2,1,t4,1,t6,1,t6+-16*t4-1,1,t10,1);
            s21(2,t2,1,t4,1,t6,1,t6+-16*t4-1,1,t10,1);
            s26(2,t2,1,t4,1,t6,1,t6+-16*t4-1,1,t10,1);
            s27(2,t2,1,t4,1,t6,1,t6+-16*t4-1,1,t10,1);
            s30(2,t2,1,t4,1,t6,1,t6+-16*t4-1,1,t10,1);
          }
        }
        if (16*t4 <= -t8+N+16*t2+12 && 16*t4 >= -t8+16*t2+17 && 16*t4 >= -t8+t6-1 && T >= 16*t2+16 && t8 >= 2 && t8 <= 13) {
          s7(2,t2,1,t4,1,t6,1,t6+-16*t4-1,1,15,1);
        }
        if (16*t4 <= -t8+N+16*t2+12 && 16*t4 >= -t8+16*t2+17 && t8 <= 13 && T >= 16*t2+16 && t8 >= 2 && 16*t4 >= -t8+t6-1) {
          s9(2,t2,1,t4,1,t6,1,t6+-16*t4-1,1,15,1);
        }
        if (16*t4 <= -t8+N+16*t2+12 && 16*t4 >= -t8+16*t2+17 && 16*t4 >= -t8+t6-1 && T >= 16*t2+16 && t8 >= 2 && t8 <= 13) {
          s16(2,t2,1,t4,1,t6,1,t6+-16*t4-1,1,15,1);
        }
        if (16*t4 <= -t8+N+16*t2+12 && 16*t4 >= -t8+16*t2+17 && 16*t4 >= -t8+t6-1 && T >= 16*t2+16 && t8 >= 2 && t8 <= 13) {
          s21(2,t2,1,t4,1,t6,1,t6+-16*t4-1,1,15,1);
        }
        if (16*t4 <= -t8+N+16*t2+12 && 16*t4 >= -t8+16*t2+17 && 16*t4 >= -t8+t6-1 && T >= 16*t2+16 && t8 >= 2 && t8 <= 13) {
          s26(2,t2,1,t4,1,t6,1,t6+-16*t4-1,1,15,1);
        }
        if (16*t4 <= -t8+N+16*t2+12 && 16*t4 >= -t8+16*t2+17 && 16*t4 >= -t8+t6-1 && T >= 16*t2+16 && t8 >= 2 && t8 <= 13) {
          s27(2,t2,1,t4,1,t6,1,t6+-16*t4-1,1,15,1);
        }
        if (16*t4 <= -t8+N+16*t2+12 && 16*t4 >= -t8+t6-1 && t8 >= 2 && T >= 16*t2+16 && t8 <= 13 && t4 >= t2+1) {
          s28(2,t2,1,t4,1,t6,1,t6+-16*t4-1,1,15,1);
        }
        if (t8 == 14 && 16*t4 >= t6-15) {
          for(t10 = max(16*t4-16*t2-N+17,1); t10 <= min(T-16*t2-1,16*t4-16*t2+12,14); t10++) {
            s7(2,t2,1,t4,1,16*t4+15,1,14,1,t10,1);
            s9(2,t2,1,t4,1,16*t4+15,1,14,1,t10,1);
            s16(2,t2,1,t4,1,16*t4+15,1,14,1,t10,1);
            s21(2,t2,1,t4,1,16*t4+15,1,14,1,t10,1);
            s25(2,t2,1,t4,1,16*t4+15,1,14,1,t10,1);
            s27(2,t2,1,t4,1,16*t4+15,1,14,1,t10,1);
            s29(2,t2,1,t4,1,16*t4+15,1,14,1,t10,1);
          }
        }
        if (t8 == 14 && 16*t4 <= 16*t2+N-2 && t4 >= t2+1 && 16*t4 >= t6-15 && T >= 16*t2+16) {
          s7(2,t2,1,t4,1,16*t4+15,1,14,1,15,1);
        }
        if (t8 == 14 && 16*t4 <= 16*t2+N-2 && t4 >= t2+1 && 16*t4 >= t6-15 && T >= 16*t2+16) {
          s9(2,t2,1,t4,1,16*t4+15,1,14,1,15,1);
        }
        if (t8 == 14 && 16*t4 <= 16*t2+N-2 && t4 >= t2+1 && 16*t4 >= t6-15 && T >= 16*t2+16) {
          s16(2,t2,1,t4,1,16*t4+15,1,14,1,15,1);
        }
        if (t8 == 14 && 16*t4 <= 16*t2+N-2 && t4 >= t2+1 && 16*t4 >= t6-15 && T >= 16*t2+16) {
          s21(2,t2,1,t4,1,16*t4+15,1,14,1,15,1);
        }
        if (t8 == 14 && 16*t4 <= 16*t2+N-2 && t4 >= t2+1 && 16*t4 >= t6-15 && T >= 16*t2+16) {
          s25(2,t2,1,t4,1,16*t4+15,1,14,1,15,1);
        }
        if (t8 == 14 && 16*t4 <= 16*t2+N-2 && t4 >= t2+1 && 16*t4 >= t6-15 && T >= 16*t2+16) {
          s27(2,t2,1,t4,1,16*t4+15,1,14,1,15,1);
        }
        if (t8 == 14 && 16*t4 <= 16*t2+N-2 && t4 >= t2+1 && 16*t4 >= t6-15 && T >= 16*t2+16) {
          s28(2,t2,1,t4,1,16*t4+15,1,14,1,15,1);
        }
        if (t8 >= 15 && 16*t4 >= t6-16 && 16*t4 >= 16*t2+N-16) {
          s7(2,t2,1,t4,1,16*t4+16,1,15,1,16*t4-N+-16*t2+17,1);
        }
        if (t8 >= 15 && 16*t4 >= t6-16 && 16*t4 >= 16*t2+N-16) {
          s9(2,t2,1,t4,1,16*t4+16,1,15,1,16*t4-N+-16*t2+17,1);
        }
        if (t8 >= 15 && 16*t4 >= t6-16 && 16*t4 >= 16*t2+N-16) {
          s15(2,t2,1,t4,1,16*t4+16,1,15,1,16*t4-N+-16*t2+17,1);
        }
        if (t8 >= 15 && 16*t4 >= t6-16 && 16*t4 >= 16*t2+N-16) {
          s20(2,t2,1,t4,1,16*t4+16,1,15,1,16*t4-N+-16*t2+17,1);
        }
        if (t8 >= 15 && 16*t4 >= t6-16 && 16*t4 >= 16*t2+N-16) {
          s23(2,t2,1,t4,1,16*t4+16,1,15,1,16*t4-N+-16*t2+17,1);
        }
        if (t8 >= 15 && 16*t4 >= 16*t2+N-16 && 16*t4 >= t6-16) {
          s27(2,t2,1,t4,1,16*t4+16,1,15,1,16*t4-N+-16*t2+17,1);
        }
        if (t8 >= 15 && 16*t4 >= 16*t2+N-2 && 16*t4 >= t6-16) {
          s28(2,t2,1,t4,1,16*t4+16,1,15,1,15,1);
        }
        if (16*t4 >= 16*t2+N-16 && 16*t4 >= t6-16 && 16*t4 <= 16*t2+N-3 && t8 >= 15) {
          s29(2,t2,1,t4,1,16*t4+16,1,15,1,16*t4-N+-16*t2+17,1);
        }
        if (16*t4 >= t6-16 && t8 >= 15) {
          for(t10 = max(16*t4-16*t2-N+18,1); t10 <= min(T-16*t2-1,16*t4-16*t2+13,14); t10++) {
            s7(2,t2,1,t4,1,16*t4+16,1,15,1,t10,1);
            s9(2,t2,1,t4,1,16*t4+16,1,15,1,t10,1);
            s15(2,t2,1,t4,1,16*t4+16,1,15,1,t10,1);
            s20(2,t2,1,t4,1,16*t4+16,1,15,1,t10,1);
            s25(2,t2,1,t4,1,16*t4+16,1,15,1,t10,1);
            s27(2,t2,1,t4,1,16*t4+16,1,15,1,t10,1);
            s29(2,t2,1,t4,1,16*t4+16,1,15,1,t10,1);
          }
        }
        if (t8 >= 15 && t4 >= t2+1 && 16*t4 <= 16*t2+N-3 && T >= 16*t2+16 && 16*t4 >= t6-16) {
          s7(2,t2,1,t4,1,16*t4+16,1,15,1,15,1);
        }
        if (t8 >= 15 && t4 >= t2+1 && 16*t4 <= 16*t2+N-3 && T >= 16*t2+16 && 16*t4 >= t6-16) {
          s9(2,t2,1,t4,1,16*t4+16,1,15,1,15,1);
        }
        if (t8 >= 15 && t4 >= t2+1 && 16*t4 <= 16*t2+N-3 && T >= 16*t2+16 && 16*t4 >= t6-16) {
          s15(2,t2,1,t4,1,16*t4+16,1,15,1,15,1);
        }
        if (t8 >= 15 && t4 >= t2+1 && 16*t4 <= 16*t2+N-3 && T >= 16*t2+16 && 16*t4 >= t6-16) {
          s20(2,t2,1,t4,1,16*t4+16,1,15,1,15,1);
        }
        if (t8 >= 15 && t4 >= t2+1 && 16*t4 <= 16*t2+N-3 && T >= 16*t2+16 && 16*t4 >= t6-16) {
          s25(2,t2,1,t4,1,16*t4+16,1,15,1,15,1);
        }
        if (t8 >= 15 && t4 >= t2+1 && 16*t4 <= 16*t2+N-3 && T >= 16*t2+16 && 16*t4 >= t6-16) {
          s27(2,t2,1,t4,1,16*t4+16,1,15,1,15,1);
        }
        if (t8 >= 15 && t4 >= t2+1 && 16*t4 <= 16*t2+N-3 && T >= 16*t2+16 && 16*t4 >= t6-16) {
          s28(2,t2,1,t4,1,16*t4+16,1,15,1,15,1);
        }
        if (16*t4 <= -t8+16*t2+16 && 16*t4 >= -t8+16*t2+2 && T >= 16*t4+t8) {
          s4(2,t2,1,t4,1,t6,1,t8,1,t8+-16*t2+16*t4-1,1);
        }
        if (16*t4 <= -t8+16*t2+16 && 16*t4 >= -t8+16*t2+2 && 16*t4 >= -t8+t6-1 && T >= 16*t4+t8) {
          s9(2,t2,1,t4,1,t6,1,t6+-16*t4-1,1,t6+-16*t2-2,1);
        }
        if (16*t4 <= -t8+t6-2 && 16*t4 >= -t8+16*t2+15 && T >= 16*t4+t8 && 16*t4 <= -t8+16*t2+16) {
          s11(2,t2,1,t4,1,t6,1,t8,1,t8+-16*t2+16*t4-1,1);
        }
        if (T >= 16*t4+t8 && t8 >= 2 && t8 <= 14 && t4 <= t2 && 16*t4 <= -t8+t6-2) {
          s12(2,t2,1,t2,1,t6,1,t8,1,t8-1,1);
        }
        if (16*t4 <= -t8+16*t2+16 && 16*t4 >= -t8+16*t2+15 && T >= 16*t4+t8) {
          s15(2,t2,1,t4,1,t6,1,t8,1,t8+-16*t2+16*t4-1,1);
        }
        if (T >= 16*t4+t8 && t8 >= 2 && t4 <= t2 && t8 <= 14) {
          s16(2,t2,1,t2,1,t6,1,t8,1,t8-1,1);
        }
        if (16*t4 <= -t8+t6-M+2 && 16*t4 >= -t8+16*t2+2 && T >= 16*t4+t8 && 16*t4 <= -t8+16*t2+16) {
          s18(2,t2,1,t4,1,t6,1,t6-M+-16*t4+2,1,t6-M+-16*t2+1,1);
        }
        if (T >= 16*t4+t8 && 16*t4 >= -t8+16*t2+15 && 16*t4 >= -t8+t6-M+3 && 16*t4 <= -t8+16*t2+16) {
          s20(2,t2,1,t4,1,t6,1,t8,1,t8+-16*t2+16*t4-1,1);
        }
        if (16*t4 >= -t8+t6-M+3 && t8 >= 2 && T >= 16*t4+t8 && t8 <= 14 && t4 <= t2) {
          s21(2,t2,1,t2,1,t6,1,t8,1,t8-1,1);
        }
        if (T >= 16*t4+t8 && t8 >= 14 && t4 <= t2) {
          s25(2,t2,1,t2,1,t6,1,t8,1,t8-1,1);
        }
        if (T >= 16*t4+t8 && 16*t4 >= -t8+16*t2+2 && t8 <= 13 && 16*t4 <= -t8+16*t2+16) {
          s26(2,t2,1,t4,1,t6,1,t8,1,t8+-16*t2+16*t4-1,1);
        }
        if (T >= 16*t4+t8 && 16*t4 >= -t8+16*t2+2 && 16*t4 <= -t8+16*t2+16) {
          s27(2,t2,1,t4,1,t6,1,t8,1,t8+-16*t2+16*t4-1,1);
        }
        if (T >= 16*t4 && t4 <= t2+1 && t8 <= 0) {
          s28(2,t2,1,t2+1,1,t6,1,0,1,15,1);
        }
        if (T >= 16*t4+t8 && t8 >= 14 && t4 <= t2) {
          s29(2,t2,1,t2,1,t6,1,t8,1,t8-1,1);
        }
        if (T >= 16*t4+t8 && t8 >= 2 && t4 <= t2 && t8 <= 13) {
          s30(2,t2,1,t2,1,t6,1,t8,1,t8-1,1);
        }
      }
    }
  }
}

# 
